<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters2="clr-namespace:Metrolib.Converters"
                    xmlns:controls="clr-namespace:Metrolib.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Metrolib;component/Themes/Constants.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters2:BoolFalseToCollapsedConverter x:Key="BoolFalseToCollapsedConverter" />

    <Style TargetType="{x:Type controls:FilterTextBox}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHovered}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="White" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:FilterTextBox}">
                    <Grid>
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- main border, styling the border-brush and background for Normal state -->
                            <Border x:Name="normalBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />

                            <!-- styling border-brush and background-color for MouseOver state -->
                            <Border x:Name="hoverBorder" Opacity="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource BorderBrushHovered}" />

                            <!-- styling border-brush and background-color for Focused state -->
                            <Border x:Name="focusBorder" Opacity="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource BorderBrushSelected}" />

                            <TextBox
                                x:Name="PART_FilterInput"
                                TabIndex="{TemplateBinding TabIndex}"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                FocusVisualStyle="{x:Null}"
                                BorderThickness="0"
                                Margin="8,0,4,0"
                                VerticalAlignment="Center"
                                AcceptsTab="{TemplateBinding AcceptsTab}"
                                AcceptsReturn="{TemplateBinding AcceptsReturn}"
                                Text="{Binding FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}" />

                            <TextBlock
                                x:Name="PART_Watermark"
                                Text="{Binding Watermark, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                IsHitTestVisible="False"
                                VerticalAlignment="Center"
                                Margin="8,0,4,0"
                                Foreground="#717171">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding FilterText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                                                Value="">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding FilterText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                                                Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding IsFocused,ElementName=PART_FilterInput}"
                                                Value="True">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <controls:CloseButton
                                Visibility="{Binding HasFilterText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolFalseToCollapsedConverter}}"
                                Grid.Column="1"
                                x:Name="PART_RemoveFilterText" />

                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:0.000" Duration="0:0:0.300"
                                                         From="0" To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="focusBorder" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:0.000" Duration="0:0:0.700"
                                                         From="1" To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="focusBorder" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:0.000" Duration="0:0:0.500"
                                                         From="1" To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="hoverBorder" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="0:0:0.000" Duration="0:0:0.500"
                                                         From="0" To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="hoverBorder" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsValid" Value="False">
                <Setter Property="Background" Value="#E81123" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
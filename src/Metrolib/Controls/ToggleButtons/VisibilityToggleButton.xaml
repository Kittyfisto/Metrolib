<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Metrolib.Controls"
                    xmlns:metrolib="clr-namespace:Metrolib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ToggleButtonBase.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type controls:VisibilityToggleButton}" BasedOn="{StaticResource {x:Type controls:ToggleButtonBase}}">
        <Setter Property="CheckedBackground" Value="Transparent" />
        <Setter Property="InvertedForeground" Value="{StaticResource BackgroundBrushSelected}" />
        <Setter Property="CheckedForeground" Value="{StaticResource ForegroundBrushSelected}" />
        <Setter Property="HoveredAndCheckedForeground" Value="{StaticResource ForegroundBrushSelectedAndHovered}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VisibilityToggleButton}">
                    <Grid x:Name="PART_MainGrid" Background="{TemplateBinding Background}">
                        <Viewbox>
                            <Canvas Width="24" Height="24">
                                <Path x:Name="PART_Icon" Fill="{TemplateBinding Foreground}" />
                            </Canvas>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Eye/off depending on IsChecked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="PART_Icon" Value="{x:Static metrolib:Icons.Eye}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Data" TargetName="PART_Icon" Value="{x:Static metrolib:Icons.EyeOff}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{StaticResource BorderBrushDisabled}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Metrolib.Controls"
                    xmlns:converters="clr-namespace:Metrolib.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Metrolib;component/Themes/Constants.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <controls:LeftMarginMultiplierConverter x:Key="LeftMarginMultiplierConverter" Multiplier="12" />
    <converters:BoolFalseToCollapsedConverter x:Key="BoolFalseToCollapsedConverter" />

    <Style TargetType="{x:Type controls:FlatTreeViewItem}">
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="Padding" Value="4" />
        <!-- IsInverted is an inherited, attached dependency property and, as such,
             travels down the entire visual tree. We use this to ensure that our content
             renders properly when we are selected (darker background => the foreground of
             our content should be white-ish). However we don't want this property to travel
             to our child TreeViewItems, and therefore have to set the property to false, by default
        -->
        <Setter Property="controls:Properties.IsInverted" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:FlatTreeViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Grid>
                            <Rectangle x:Name="PART_HoveredRect"
                                       Fill="{StaticResource BackgroundBrushHovered}"
                                       Opacity="0" />
                            <Rectangle x:Name="PART_SelectedRect"
                                       Fill="{StaticResource BackgroundBrushSelected}"
                                       Opacity="0" />
                            <Rectangle x:Name="PART_SelectedHoveredRect"
                                       Fill="{StaticResource BackgroundBrushSelectedAndHovered}"
                                       Opacity="0" />
                            <Grid x:Name="PART_Header"
                                  Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftMarginMultiplierConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <controls:ExpanderToggleButton x:Name="PART_Expander"
                                                               Padding="0"
                                                               IconHeight="20"
                                                               IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />

                                <ContentPresenter Grid.Column="1"
                                                  ContentSource="Header"
                                                  Margin="{TemplateBinding Padding}" />
                            </Grid>
                        </Grid>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Visibility="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolFalseToCollapsedConverter}}"
                                        Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="PART_Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsExpandable" Value="False">
                            <Setter TargetName="PART_Expander" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="controls:Properties.IsInverted" Value="True" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HoveredRect"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.200" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HoveredRect"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.200" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!-- Foreground/Background when selected -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Header" Property="TextBlock.Foreground"
                                    Value="{StaticResource ForegroundBrushInverted}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_SelectedRect"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0.6"
                                                         To="1"
                                                         Duration="0:0:0.200">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation Storyboard.TargetName="PART_SelectedRect"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.200" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!-- Background when selected and hovered -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_SelectedHoveredRect"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.200" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_SelectedHoveredRect"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.200" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Metrolib.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Metrolib;component/Controls/Base/FlatButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Geometry x:Key="Add">
        M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z
    </Geometry>
    
    <Style TargetType="{x:Type controls:AddButton}" BasedOn="{StaticResource DefaultFlatButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:AddButton}">
                    <Grid x:Name="PART_MainGrid" Background="Transparent">
                        <Viewbox Margin="{TemplateBinding Padding}">
                            <Canvas Width="24" Height="24">
                                <Path x:Name="PART_Icon" Data="{StaticResource Add}" />
                            </Canvas>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Color of icon when normal/inverted -->
                        <Trigger Property="IsInverted" Value="True">
                            <Setter TargetName="PART_Icon" Property="Fill" Value="{Binding InvertedForeground,RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsInverted" Value="False">
                            <Setter TargetName="PART_Icon" Property="Fill" Value="{Binding Foreground,RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <!-- Color of icon when disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Icon" Property="Fill" Value="{StaticResource BorderBrushDisabled}" />
                        </Trigger>
                        <!-- Background when mouse over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_MainGrid" Property="Background" Value="{Binding HoveredBackground,RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <!-- Background when pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_MainGrid" Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
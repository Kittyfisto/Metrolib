<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:base="clr-namespace:Metrolib.Controls.Base" xmlns:controls="clr-namespace:Metrolib.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Metrolib;component/Themes/Constants.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultFlatButtonStyle" TargetType="{x:Type controls:FlatButton}">
        <Setter Property="Foreground" Value="{StaticResource BorderBrushSelected}" />
        <Setter Property="HoveredForeground" Value="{StaticResource BorderBrushSelected}" />
        <Setter Property="PressedForeground" Value="{StaticResource BorderBrushSelected}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HoveredBackground" Value="{StaticResource BackgroundBrushHovered}" />
        <Setter Property="PressedBackground" Value="{StaticResource BackgroundBrushPressed}" />
        <Setter Property="InvertedForeground" Value="White" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:FlatButton}">
                    <Grid Margin="{TemplateBinding Margin}" ClipToBounds="True">
                        <Rectangle x:Name="PART_HoveredRect"
                                   Fill="{TemplateBinding Background}"
                                   Opacity="0" />
                        <Rectangle x:Name="PART_PressedRect"
                                   Fill="{TemplateBinding PressedBackground}"
                                   Opacity="0"
                                   RenderTransformOrigin="0.5, 0">
                            <Rectangle.RenderTransform>
                                <ScaleTransform />
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <ContentPresenter x:Name="PART_Presenter"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Color of foreground when inverted -->
                        <Trigger Property="controls:Properties.IsInverted" Value="True">
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <!-- Color of foreground when disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource BorderBrushDisabled}" />
                        </Trigger>

                        <!-- Background when mouse enter/leave -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground"
                                    Value="{Binding HoveredForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Background"
                                    Value="{Binding HoveredBackground, RelativeSource={RelativeSource Self}}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HoveredRect"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0" To="1"
                                                         Duration="0:0:0.200" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation Storyboard.TargetName="PART_HoveredRect"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1" To="0"
                                                         Duration="0:0:0.200" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!-- Background when mouse is pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_PressedRect"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.200">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_PressedRect"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.200">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>